// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.23.2
// source: github.com/Microsoft/hcsshim/pkg/ncproxy/nodenetsvc/v1/nodenetsvc.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestType int32

const (
	RequestType_Setup    RequestType = 0
	RequestType_Teardown RequestType = 1
)

// Enum value maps for RequestType.
var (
	RequestType_name = map[int32]string{
		0: "Setup",
		1: "Teardown",
	}
	RequestType_value = map[string]int32{
		"Setup":    0,
		"Teardown": 1,
	}
)

func (x RequestType) Enum() *RequestType {
	p := new(RequestType)
	*p = x
	return p
}

func (x RequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_enumTypes[0].Descriptor()
}

func (RequestType) Type() protoreflect.EnumType {
	return &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_enumTypes[0]
}

func (x RequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestType.Descriptor instead.
func (RequestType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescGZIP(), []int{0}
}

type ConfigureNetworkingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerID string      `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	RequestType RequestType `protobuf:"varint,2,opt,name=request_type,json=requestType,proto3,enum=nodenetsvc.v1.RequestType" json:"request_type,omitempty"`
}

func (x *ConfigureNetworkingRequest) Reset() {
	*x = ConfigureNetworkingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureNetworkingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureNetworkingRequest) ProtoMessage() {}

func (x *ConfigureNetworkingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureNetworkingRequest.ProtoReflect.Descriptor instead.
func (*ConfigureNetworkingRequest) Descriptor() ([]byte, []int) {
	return file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigureNetworkingRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *ConfigureNetworkingRequest) GetRequestType() RequestType {
	if x != nil {
		return x.RequestType
	}
	return RequestType_Setup
}

type ConfigureNetworkingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigureNetworkingResponse) Reset() {
	*x = ConfigureNetworkingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureNetworkingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureNetworkingResponse) ProtoMessage() {}

func (x *ConfigureNetworkingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureNetworkingResponse.ProtoReflect.Descriptor instead.
func (*ConfigureNetworkingResponse) Descriptor() ([]byte, []int) {
	return file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescGZIP(), []int{1}
}

type PingNodeNetworkServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PingRequestMessage string `protobuf:"bytes,1,opt,name=ping_request_message,json=pingRequestMessage,proto3" json:"ping_request_message,omitempty"`
}

func (x *PingNodeNetworkServiceRequest) Reset() {
	*x = PingNodeNetworkServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingNodeNetworkServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingNodeNetworkServiceRequest) ProtoMessage() {}

func (x *PingNodeNetworkServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingNodeNetworkServiceRequest.ProtoReflect.Descriptor instead.
func (*PingNodeNetworkServiceRequest) Descriptor() ([]byte, []int) {
	return file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescGZIP(), []int{2}
}

func (x *PingNodeNetworkServiceRequest) GetPingRequestMessage() string {
	if x != nil {
		return x.PingRequestMessage
	}
	return ""
}

type PingNodeNetworkServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PingResponseMessage string `protobuf:"bytes,1,opt,name=ping_response_message,json=pingResponseMessage,proto3" json:"ping_response_message,omitempty"`
}

func (x *PingNodeNetworkServiceResponse) Reset() {
	*x = PingNodeNetworkServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingNodeNetworkServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingNodeNetworkServiceResponse) ProtoMessage() {}

func (x *PingNodeNetworkServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingNodeNetworkServiceResponse.ProtoReflect.Descriptor instead.
func (*PingNodeNetworkServiceResponse) Descriptor() ([]byte, []int) {
	return file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescGZIP(), []int{3}
}

func (x *PingNodeNetworkServiceResponse) GetPingResponseMessage() string {
	if x != nil {
		return x.PingResponseMessage
	}
	return ""
}

type ConfigureContainerNetworkingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestType        RequestType `protobuf:"varint,1,opt,name=request_type,json=requestType,proto3,enum=nodenetsvc.v1.RequestType" json:"request_type,omitempty"`
	ContainerID        string      `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	NetworkNamespaceID string      `protobuf:"bytes,3,opt,name=network_namespace_id,json=networkNamespaceId,proto3" json:"network_namespace_id,omitempty"`
}

func (x *ConfigureContainerNetworkingRequest) Reset() {
	*x = ConfigureContainerNetworkingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureContainerNetworkingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureContainerNetworkingRequest) ProtoMessage() {}

func (x *ConfigureContainerNetworkingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureContainerNetworkingRequest.ProtoReflect.Descriptor instead.
func (*ConfigureContainerNetworkingRequest) Descriptor() ([]byte, []int) {
	return file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigureContainerNetworkingRequest) GetRequestType() RequestType {
	if x != nil {
		return x.RequestType
	}
	return RequestType_Setup
}

func (x *ConfigureContainerNetworkingRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *ConfigureContainerNetworkingRequest) GetNetworkNamespaceID() string {
	if x != nil {
		return x.NetworkNamespaceID
	}
	return ""
}

type ConfigureContainerNetworkingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interfaces []*ContainerNetworkInterface `protobuf:"bytes,1,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
}

func (x *ConfigureContainerNetworkingResponse) Reset() {
	*x = ConfigureContainerNetworkingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureContainerNetworkingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureContainerNetworkingResponse) ProtoMessage() {}

func (x *ConfigureContainerNetworkingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureContainerNetworkingResponse.ProtoReflect.Descriptor instead.
func (*ConfigureContainerNetworkingResponse) Descriptor() ([]byte, []int) {
	return file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigureContainerNetworkingResponse) GetInterfaces() []*ContainerNetworkInterface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

type ContainerIPAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version        string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Ip             string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	PrefixLength   string `protobuf:"bytes,4,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	DefaultGateway string `protobuf:"bytes,5,opt,name=default_gateway,json=defaultGateway,proto3" json:"default_gateway,omitempty"`
}

func (x *ContainerIPAddress) Reset() {
	*x = ContainerIPAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerIPAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerIPAddress) ProtoMessage() {}

func (x *ContainerIPAddress) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerIPAddress.ProtoReflect.Descriptor instead.
func (*ContainerIPAddress) Descriptor() ([]byte, []int) {
	return file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescGZIP(), []int{6}
}

func (x *ContainerIPAddress) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ContainerIPAddress) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ContainerIPAddress) GetPrefixLength() string {
	if x != nil {
		return x.PrefixLength
	}
	return ""
}

func (x *ContainerIPAddress) GetDefaultGateway() string {
	if x != nil {
		return x.DefaultGateway
	}
	return ""
}

type ContainerNetworkInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MacAddress         string                `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	NetworkNamespaceID string                `protobuf:"bytes,3,opt,name=network_namespace_id,json=networkNamespaceId,proto3" json:"network_namespace_id,omitempty"`
	Ipaddresses        []*ContainerIPAddress `protobuf:"bytes,4,rep,name=ipaddresses,proto3" json:"ipaddresses,omitempty"`
}

func (x *ContainerNetworkInterface) Reset() {
	*x = ContainerNetworkInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerNetworkInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerNetworkInterface) ProtoMessage() {}

func (x *ContainerNetworkInterface) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerNetworkInterface.ProtoReflect.Descriptor instead.
func (*ContainerNetworkInterface) Descriptor() ([]byte, []int) {
	return file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescGZIP(), []int{7}
}

func (x *ContainerNetworkInterface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerNetworkInterface) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *ContainerNetworkInterface) GetNetworkNamespaceID() string {
	if x != nil {
		return x.NetworkNamespaceID
	}
	return ""
}

func (x *ContainerNetworkInterface) GetIpaddresses() []*ContainerIPAddress {
	if x != nil {
		return x.Ipaddresses
	}
	return nil
}

type GetHostLocalIpAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerID string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
}

func (x *GetHostLocalIpAddressRequest) Reset() {
	*x = GetHostLocalIpAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHostLocalIpAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostLocalIpAddressRequest) ProtoMessage() {}

func (x *GetHostLocalIpAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostLocalIpAddressRequest.ProtoReflect.Descriptor instead.
func (*GetHostLocalIpAddressRequest) Descriptor() ([]byte, []int) {
	return file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescGZIP(), []int{8}
}

func (x *GetHostLocalIpAddressRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

type GetHostLocalIpAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddr string `protobuf:"bytes,1,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
}

func (x *GetHostLocalIpAddressResponse) Reset() {
	*x = GetHostLocalIpAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHostLocalIpAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostLocalIpAddressResponse) ProtoMessage() {}

func (x *GetHostLocalIpAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostLocalIpAddressResponse.ProtoReflect.Descriptor instead.
func (*GetHostLocalIpAddressResponse) Descriptor() ([]byte, []int) {
	return file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescGZIP(), []int{9}
}

func (x *GetHostLocalIpAddressResponse) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

var File_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto protoreflect.FileDescriptor

var file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDesc = []byte{
	0x0a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x2f, 0x68, 0x63, 0x73, 0x73, 0x68, 0x69, 0x6d, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x6e, 0x63, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x6e,
	0x65, 0x74, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x6e, 0x65, 0x74,
	0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x6e,
	0x65, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x22, 0x7e, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6e, 0x65, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x0a, 0x1d, 0x50, 0x69, 0x6e, 0x67, 0x4e,
	0x6f, 0x64, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x54, 0x0a, 0x1e, 0x50, 0x69,
	0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x15,
	0x70, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xb9, 0x01, 0x0a, 0x23, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6e, 0x65, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x24,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6e,
	0x65, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x22, 0x8c,
	0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x50, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x22, 0xc7, 0x01,
	0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x30, 0x0a, 0x14, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x43, 0x0a, 0x0b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6e, 0x65,
	0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x69, 0x70, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x48, 0x6f,
	0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x2a, 0x26, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x65, 0x74, 0x75, 0x70, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x54, 0x65, 0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e, 0x10, 0x01, 0x32, 0xf7, 0x03, 0x0a,
	0x12, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x6c, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x2e, 0x6e, 0x6f, 0x64,
	0x65, 0x6e, 0x65, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6e, 0x65, 0x74, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x87, 0x01, 0x0a, 0x1c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x12, 0x32, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6e, 0x65, 0x74, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6e, 0x65, 0x74,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x16, 0x50,
	0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6e, 0x65, 0x74, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6e, 0x65, 0x74, 0x73, 0x76, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x72, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x6e, 0x65, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6e,
	0x65, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x2f, 0x68,
	0x63, 0x73, 0x73, 0x68, 0x69, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6e, 0x63, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x6e, 0x65, 0x74, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescOnce sync.Once
	file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescData = file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDesc
)

func file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescGZIP() []byte {
	file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescOnce.Do(func() {
		file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescData)
	})
	return file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDescData
}

var file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_goTypes = []interface{}{
	(RequestType)(0),                             // 0: nodenetsvc.v1.RequestType
	(*ConfigureNetworkingRequest)(nil),           // 1: nodenetsvc.v1.ConfigureNetworkingRequest
	(*ConfigureNetworkingResponse)(nil),          // 2: nodenetsvc.v1.ConfigureNetworkingResponse
	(*PingNodeNetworkServiceRequest)(nil),        // 3: nodenetsvc.v1.PingNodeNetworkServiceRequest
	(*PingNodeNetworkServiceResponse)(nil),       // 4: nodenetsvc.v1.PingNodeNetworkServiceResponse
	(*ConfigureContainerNetworkingRequest)(nil),  // 5: nodenetsvc.v1.ConfigureContainerNetworkingRequest
	(*ConfigureContainerNetworkingResponse)(nil), // 6: nodenetsvc.v1.ConfigureContainerNetworkingResponse
	(*ContainerIPAddress)(nil),                   // 7: nodenetsvc.v1.ContainerIPAddress
	(*ContainerNetworkInterface)(nil),            // 8: nodenetsvc.v1.ContainerNetworkInterface
	(*GetHostLocalIpAddressRequest)(nil),         // 9: nodenetsvc.v1.GetHostLocalIpAddressRequest
	(*GetHostLocalIpAddressResponse)(nil),        // 10: nodenetsvc.v1.GetHostLocalIpAddressResponse
}
var file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_depIdxs = []int32{
	0,  // 0: nodenetsvc.v1.ConfigureNetworkingRequest.request_type:type_name -> nodenetsvc.v1.RequestType
	0,  // 1: nodenetsvc.v1.ConfigureContainerNetworkingRequest.request_type:type_name -> nodenetsvc.v1.RequestType
	8,  // 2: nodenetsvc.v1.ConfigureContainerNetworkingResponse.interfaces:type_name -> nodenetsvc.v1.ContainerNetworkInterface
	7,  // 3: nodenetsvc.v1.ContainerNetworkInterface.ipaddresses:type_name -> nodenetsvc.v1.ContainerIPAddress
	1,  // 4: nodenetsvc.v1.NodeNetworkService.ConfigureNetworking:input_type -> nodenetsvc.v1.ConfigureNetworkingRequest
	5,  // 5: nodenetsvc.v1.NodeNetworkService.ConfigureContainerNetworking:input_type -> nodenetsvc.v1.ConfigureContainerNetworkingRequest
	3,  // 6: nodenetsvc.v1.NodeNetworkService.PingNodeNetworkService:input_type -> nodenetsvc.v1.PingNodeNetworkServiceRequest
	9,  // 7: nodenetsvc.v1.NodeNetworkService.GetHostLocalIpAddress:input_type -> nodenetsvc.v1.GetHostLocalIpAddressRequest
	2,  // 8: nodenetsvc.v1.NodeNetworkService.ConfigureNetworking:output_type -> nodenetsvc.v1.ConfigureNetworkingResponse
	6,  // 9: nodenetsvc.v1.NodeNetworkService.ConfigureContainerNetworking:output_type -> nodenetsvc.v1.ConfigureContainerNetworkingResponse
	4,  // 10: nodenetsvc.v1.NodeNetworkService.PingNodeNetworkService:output_type -> nodenetsvc.v1.PingNodeNetworkServiceResponse
	10, // 11: nodenetsvc.v1.NodeNetworkService.GetHostLocalIpAddress:output_type -> nodenetsvc.v1.GetHostLocalIpAddressResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_init() }
func file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_init() {
	if File_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureNetworkingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureNetworkingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingNodeNetworkServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingNodeNetworkServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureContainerNetworkingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureContainerNetworkingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerIPAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerNetworkInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHostLocalIpAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHostLocalIpAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_goTypes,
		DependencyIndexes: file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_depIdxs,
		EnumInfos:         file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_enumTypes,
		MessageInfos:      file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_msgTypes,
	}.Build()
	File_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto = out.File
	file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_rawDesc = nil
	file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_goTypes = nil
	file_github_com_Microsoft_hcsshim_pkg_ncproxy_nodenetsvc_v1_nodenetsvc_proto_depIdxs = nil
}
